#!/bin/bash


sudo apt -y install htop screen mc burpsuite responder dnsmasq hostapd netfilter-persistent iptables-persistent hcxdumptool hcxtools

if ! [[ -d /scripts ]]
then
   sudo mkdir /scripts
fi


if [[ ! -e /scripts/upgrade ]]
then
	cat << EOF | sudo tee /scripts/upgrade > /dev/null
#!/bin/bash
sudo apt update
sudo apt -y upgrade
sudo apt -y full-upgrade
sudo apt -y autoremove
sudo apt -y clean
sudo apt -y purge
EOF
	sudo chmod +x /scripts/upgrade	
	echo "/scripts/upgrade done!"
fi





if ! $(grep -q wlan0 /etc/hostapd/hostapd.conf)
then
echo -n 'Enter WIFI password: '
read changeme
cat << EOF | sudo tee /etc/hostapd/hostapd.conf > /dev/null
interface=wlan0
driver=nl80211
hw_mode=g
channel=6
ieee80211n=1
wmm_enabled=1
ht_capab=[HT40][SHORT-GI-20][DSSS_CCK-40]
macaddr_acl=0
ignore_broadcast_ssid=0
auth_algs=1
wpa=2
wpa_key_mgmt=WPA-PSK
rsn_pairwise=CCMP
ssid=AndroidAP
wpa_passphrase=$changeme
EOF
	sudo iptables -A FORWARD -i wlan0 -j ACCEPT
	sudo iptables -A FORWARD -o wlan0 -j ACCEPT
	sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
	sudo iptables-save
	sudo iptables-save > /etc/iptables/rules.v4
	sudo netfilter-persistent save
	sudo systemctl enable iptables
	
	echo "iptables configured!"
	echo "/etc/hostapd/hostapd.conf modified!"
fi


if ! $(grep -q wlan0 /etc/dnsmasq.conf)
then
cat << EOF | sudo tee -a /etc/dnsmasq.conf > /dev/null
# DHCP server active for WLAN interface
    interface = wlan0
    # DHCP server not active for existing network
    no-dhcp-interface = eth0
    # IPv4 address range and lease time
    dhcp-range = 192.168.200.100,192.168.200.150,24h
EOF
	echo "/etc/dnsmasq.conf modified!"
fi

if ! $(grep -q wlan0 /etc/network/interfaces)
then
cat << EOF | sudo tee -a /etc/network/interfaces > /dev/null
auto wlan0
    iface wlan0 inet static
    address 192.168.200.1/24
    gateway 192.168.200.1
EOF
	echo "/etc/network/interfaces modified!"
fi




sudo sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
if ! $(sudo grep -q afowler /root/.zshrc)
then
    sudo sed -i 's/ZSH_THEME=.*/$ZSH_THEME=\"afowler\"/g' /root/.zshrc
    cat << EOF | sudo tee -a /root/.zshrc > /dev/null
export LANGUAGE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8

export PATH=\$PATH:/scripts/
EOF
	echo " /root/.zshrc modified!"
fi


sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
if ! $(grep -q afowler ~/.zshrc)
then
    sed -i 's/ZSH_THEME=.*/ZSH_THEME=\"afowler\"/g' ~/.zshrc
    sed -i 's/plugins=.*/plugins=\(sudo\)/g' ~/.zshrc
 cat << EOF | tee -a ~/.zshrc > /dev/null
export LANGUAGE=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8

export PATH=\$PATH:/scripts/
EOF
	echo " ~/.zshrc modified!"
fi


sudo systemctl disable smartmontools

sudo mkdir -p /etc/systemd/system/networking.service.d/
sudo bash -c 'echo -e "[Service]\nTimeoutSec=20" > /etc/systemd/system/networking.service.d/timeout.conf'
sudo sed -i '/auto eth0/d' /etc/network/interfaces.d/eth0
sudo sed -i 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/' /etc/sysctl.conf


sudo systemctl daemon-reload
##sudo systemctl set-default graphical.target
sudo systemctl set-default multi-user.target



